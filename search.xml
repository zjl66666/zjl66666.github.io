<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>并查集</title>
      <link href="/f171.html"/>
      <url>/f171.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目如下"><a href="#题目如下" class="headerlink" title="题目如下"></a><a href="https://leetcode.cn/problems/bLyHh0/">题目</a>如下</h2><p><img src="/images/pasted-16.png" alt="upload successful"></p><h3 id="常见的dfs做法如下"><a href="#常见的dfs做法如下" class="headerlink" title="常见的dfs做法如下"></a>常见的dfs做法如下</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findCircleNum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> isConnected<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span>int<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> int<span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> y <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> isConnected<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token operator">not</span> y <span class="token keyword">in</span> visited<span class="token punctuation">:</span>                    visited<span class="token punctuation">.</span>add<span class="token punctuation">(</span>y<span class="token punctuation">)</span>                    dfs<span class="token punctuation">(</span>y<span class="token punctuation">)</span>        n <span class="token operator">=</span> len<span class="token punctuation">(</span>isConnected<span class="token punctuation">)</span>        visited <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">not</span> <span class="token keyword">in</span> visited<span class="token punctuation">:</span>                dfs<span class="token punctuation">(</span>i<span class="token punctuation">)</span>                res <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> res</code></pre><h3 id="并查集做法如下"><a href="#并查集做法如下" class="headerlink" title="并查集做法如下"></a>并查集做法如下</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findCircleNum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> isConnected<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span>int<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> int<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 并查集</span>        n <span class="token operator">=</span> len<span class="token punctuation">(</span>isConnected<span class="token punctuation">)</span>        parent <span class="token operator">=</span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 寻找属于哪一个联通分块</span>        <span class="token keyword">def</span> <span class="token function">find</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 不断寻找自身的上级，即属于哪一个联通分块(寻找帮主)</span>            <span class="token keyword">if</span> parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> i<span class="token punctuation">:</span>                parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> find<span class="token punctuation">(</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>              <span class="token keyword">return</span> parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">union</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 合并到联通分块,这里将i联通到j，(将i的帮主设为j的帮主)</span>            parent<span class="token punctuation">[</span>find<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> find<span class="token punctuation">(</span>j<span class="token punctuation">)</span>                   <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> isConnected<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                    union<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># parent[i] == i(即i为帮主，联通分块的老大)</span>        provinces <span class="token operator">=</span> sum<span class="token punctuation">(</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">return</span> provinces        </code></pre><h3 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h3><p>定义：是一种树型的数据结构，用于处理一些不相交集合的合并及查询问题（即所谓的并、查）。比如说，我们可以用并查集来判断一个森林中有几棵树、某个节点是否属于某棵树等。</p><p>主要构成：<br>要由一个整型数组parent[ ]和两个函数find( )、union( )构成。<br>其中数组 parent[ ] 记录了每个点的前驱节点是谁，函数 find(x) 用于查找指定节点 x 属于哪个集合，函数 union(x,y) 用于合并两个节点 x 和 y 。</p><p>作用：<br>主要作用是求连通分支数（如果一个图中所有点都存在可达关系（直接或间接相连），则此图的连通分支数为1；如果此图有两大子图各自全部可达，则此图的连通分支数为2……）</p><ul><li><a href="https://blog.csdn.net/the_ZED/article/details/105126583?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169957474216777224413146%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=169957474216777224413146&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105126583-null-null.142%5Ev96%5Epc_search_result_base4&utm_term=%E5%B9%B6%E6%9F%A5%E9%9B%86&spm=1018.2226.3001.4187">相关文章</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 力扣 </tag>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据是不会骗人的，当你读到这篇博客的时候，在接下来的日子里，你会运气爆棚🥰，财源滚滚💰，身体健康💪，一切都会越来越好👍，许下的心愿都能实现✨！</title>
      <link href="/c8ab.html"/>
      <url>/c8ab.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zjl66666/BlogSource/medias/featureimages/9%20.jpg" alt="壁纸"></p>]]></content>
      
      
      <categories>
          
          <category> 相册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>You’ll Never Walk Alone</title>
      <link href="/95e8.html"/>
      <url>/95e8.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/zjl66666/BlogSource/medias/featureimages/3.jpg" alt="壁纸"></p>]]></content>
      
      
      <categories>
          
          <category> 相册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode500题纪念</title>
      <link href="/77c0.html"/>
      <url>/77c0.html</url>
      
        <content type="html"><![CDATA[<h2 id="千里之行，始于足下"><a href="#千里之行，始于足下" class="headerlink" title="千里之行，始于足下"></a>千里之行，始于足下</h2><h2 id="力扣500题成就达成！🚀✨🌈"><a href="#力扣500题成就达成！🚀✨🌈" class="headerlink" title="力扣500题成就达成！🚀✨🌈"></a><a href="https://leetcode.cn/">力扣</a>500题成就达成！🚀✨🌈</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滑动窗口+IQ题</title>
      <link href="/5fe5.html"/>
      <url>/5fe5.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目如下"><a href="#题目如下" class="headerlink" title="题目如下:"></a><a href="https://leetcode.cn/problems/subarrays-with-k-different-integers/description/?envType=list&envId=Z3Wz8smP">题目</a>如下:</h2><p><img src="/images/pasted-15.png" alt="题目"></p><h3 id="好像是经典的滑动窗口求最小模板题😏"><a href="#好像是经典的滑动窗口求最小模板题😏" class="headerlink" title="好像是经典的滑动窗口求最小模板题😏"></a>好像是经典的滑动窗口求最小模板题😏</h3><p>于是快速写出下面代码</p><pre class=" language-python"><code class="language-python">n <span class="token operator">=</span> len<span class="token punctuation">(</span>nums<span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token number">0</span>left<span class="token punctuation">,</span>right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>window <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;</span><span class="token keyword">while</span> right <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>    window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>get<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">while</span> len<span class="token punctuation">(</span>window<span class="token punctuation">)</span> <span class="token operator">==</span> k<span class="token punctuation">:</span>        res <span class="token operator">+=</span> n <span class="token operator">-</span> right           window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>        <span class="token keyword">if</span> window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            window<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span>        left <span class="token operator">+=</span> <span class="token number">1</span>    right <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">return</span> res</code></pre><h3 id="提交发现出错了！😭"><a href="#提交发现出错了！😭" class="headerlink" title="提交发现出错了！😭"></a>提交发现出错了！😭</h3><p>思考了一下发现应该时res +&#x3D; n - right这一步中出了问题，因为当前子数组满足，后面的不一定满足</p><h3 id="不懂了果断去看题解😤"><a href="#不懂了果断去看题解😤" class="headerlink" title="不懂了果断去看题解😤"></a>不懂了果断去看题解😤</h3><p>最后发现是IQ题</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">atMostK</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> len<span class="token punctuation">(</span>nums<span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token number">0</span>    left<span class="token punctuation">,</span>right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    succes <span class="token operator">=</span> <span class="token number">0</span>    window <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;</span>    <span class="token keyword">while</span> right <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>        window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>get<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">while</span> len<span class="token punctuation">(</span>window<span class="token punctuation">)</span> <span class="token operator">></span> k<span class="token punctuation">:</span>            window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token keyword">if</span> window<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                window<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span>            left <span class="token operator">+=</span> <span class="token number">1</span>        right <span class="token operator">+=</span> <span class="token number">1</span>        res <span class="token operator">+=</span> right <span class="token operator">-</span> left    <span class="token keyword">return</span> res</code></pre><h3 id="我不理解😕"><a href="#我不理解😕" class="headerlink" title="我不理解😕"></a>我不理解😕</h3><p>这是在干什么，怎么和题目不一样，直到看到最后…</p><pre class=" language-python"><code class="language-python"> <span class="token comment" spellcheck="true"># 最多有K个-最多有k-1个 = 刚好有k个</span> <span class="token keyword">return</span> atMostK<span class="token punctuation">(</span>nums<span class="token punctuation">,</span>k<span class="token punctuation">)</span> <span class="token operator">-</span> atMostK<span class="token punctuation">(</span>nums<span class="token punctuation">,</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span></code></pre><h3 id="妙啊！！！🥳😋🤣"><a href="#妙啊！！！🥳😋🤣" class="headerlink" title="妙啊！！！🥳😋🤣"></a>妙啊！！！🥳😋🤣</h3>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Python </tag>
            
            <tag> 滑动窗口 </tag>
            
            <tag> IQ题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm快捷键</title>
      <link href="/4493.html"/>
      <url>/4493.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><pre class=" language-python"><code class="language-python">  alt<span class="token operator">+</span><span class="token number">1</span>：打开或隐藏工程目录  shift<span class="token operator">+</span>f10：运行  shift<span class="token operator">+</span>f9：调试  alt<span class="token operator">+</span>enter：解决方案  shift<span class="token operator">+</span>shift：搜索</code></pre><h2 id="编辑器基础知识"><a href="#编辑器基础知识" class="headerlink" title="编辑器基础知识"></a>编辑器基础知识</h2><pre class=" language-python"><code class="language-python">  ctrl<span class="token operator">+</span>D：复制当前行  ctrl<span class="token operator">+</span>W：选中当前单词<span class="token punctuation">,</span>连续按会选中更大范围  ctrl <span class="token operator">-</span>：收起代码块，再加shift收起全部  ctrl <span class="token operator">=</span>：展开代码块  ctrl<span class="token operator">+</span>alt<span class="token operator">+</span>T：包围代码块如<span class="token keyword">if</span>，<span class="token keyword">try</span>等  ctrl<span class="token operator">+</span>R：替换</code></pre><h2 id="代码辅助"><a href="#代码辅助" class="headerlink" title="代码辅助"></a>代码辅助</h2><pre class=" language-python"><code class="language-python">  ctrl<span class="token operator">+</span>alt<span class="token operator">+</span>L：格式化代码  ctrl<span class="token operator">+</span>alt<span class="token operator">+</span>shift<span class="token operator">+</span>L：优化导入等  ctrl<span class="token operator">+</span>P：原地查看方法签名  ctrl<span class="token operator">+</span>shift<span class="token operator">+</span>f7：高亮显示所有该单词</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> PyCharm </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内容汇总</title>
      <link href="/7f9.html"/>
      <url>/7f9.html</url>
      
        <content type="html"><![CDATA[<h4 id="本人在博客发布的主要内容包括但不限于Python🐍，Java☕，人工智能🤖，算法📝，有趣的项目🎯，希望你读得开心😁-👋🏻-👨🏿‍💻"><a href="#本人在博客发布的主要内容包括但不限于Python🐍，Java☕，人工智能🤖，算法📝，有趣的项目🎯，希望你读得开心😁-👋🏻-👨🏿‍💻" class="headerlink" title="本人在博客发布的主要内容包括但不限于Python🐍，Java☕，人工智能🤖，算法📝，有趣的项目🎯，希望你读得开心😁 👋🏻 👨🏿‍💻"></a>本人在博客发布的主要内容包括但不限于Python🐍，Java☕，人工智能🤖，算法📝，有趣的项目🎯，希望你读得开心😁 👋🏻 👨🏿‍💻</h4>]]></content>
      
      
      <categories>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Python </tag>
            
            <tag> Java </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/3eeb.html"/>
      <url>/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
